{"version":3,"sources":["components/Cabecalho.js","components/Rodape.js","constants/config.js","constants/apiKey.js","pages/Inicio.js","pages/Planetas.js","routes/Rotas.js","App.js","index.js"],"names":["Cabecalho","Navbar","className","bg","variant","Brand","Nav","Link","href","Rodape","fixed","NavbarBrand","BACKEND","apiNasa","Inicio","useState","dadosAPI","setDadosAPI","setCarregandoDadosAPI","a","url","fetch","then","response","json","data","console","log","catch","error","message","useEffect","obterDadosAPI","document","title","Container","fluid","Row","Col","xs","sm","md","Image","src","width","Object","keys","copyright","explanation","Date","date","toLocaleDateString","Planetas","valorInicial","nome","raioKM","numSatelites","distanceSolUA","tipo","planeta","setPlaneta","planetas","setPlanetas","carregandoPlanetas","setCarregandoPlanetas","erros","setErros","salvandoPlanetas","setSalvandoPlanetas","aviso","setAviso","confirmaExclusao","setConfirmaExclusao","obterPlanetas","validaErrosPlaneta","novosErros","isNaN","parseFloat","parseInt","event","preventDefault","length","metodo","hasOwnProperty","method","headers","Accept","body","JSON","stringify","_id","alteraDadosPlaneta","e","target","name","value","lg","Form","Group","as","controlId","Label","Control","placeholder","onChange","isInvalid","Feedback","type","Check","inline","label","Button","onClick","salvarPlaneta","Spinner","animation","size","Table","striped","bordered","map","item","Number","toLocaleString","createdAt","colSpan","Toast","onClose","show","delay","autohide","style","position","top","right","Header","closeButton","Body","Modal","onHide","Title","Footer","excluirPlaneta","Rotas","exact","path","element","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a77d978d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nimport { IoMdGlobe, IoMdPlanet } from 'react-icons/io'\r\nimport { GiNightSky } from 'react-icons/gi'\r\n\r\nconst Cabecalho = () => {\r\n    return (\r\n    <Navbar className=\"p-3\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand><GiNightSky/> Órion</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#/\"><IoMdGlobe/> Início</Nav.Link>\r\n            <Nav.Link href=\"#/planetas\"><IoMdPlanet/> Planetas</Nav.Link>\r\n        </Nav>\r\n    </Navbar>\r\n    )\r\n}\r\n\r\nexport default Cabecalho","import React from 'react'\r\n\r\nimport { Navbar, NavbarBrand } from 'react-bootstrap'\r\n\r\nimport { GiNightSky } from 'react-icons/gi'\r\n\r\nconst Rodape = () => {\r\n    return (\r\n        <Navbar className=\"p-2\" bg=\"dark\" fixed=\"bottom\">\r\n            <NavbarBrand className=\"text-light\">\r\n                <GiNightSky/> Órion &copy; - Todos os direitos reservados\r\n            </NavbarBrand>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Rodape","import apiKey from './apiKey'\r\n\r\nexport const BACKEND = \"https://projeto-backend-gti.herokuapp.com\"\r\nexport const apiNasa = `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`\r\n\r\nconst config = { BACKEND, apiNasa }\r\n\r\nexport default config","const apiKey = \"p74izy2JzE22Znp4YyrxLwlSSEaG1L21MO2rFoQ0\"\r\n\r\nexport default apiKey","import React, { useEffect, useState } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nimport Cabecalho from '../components/Cabecalho'\r\nimport Rodape from '../components/Rodape'\r\n\r\nimport { apiNasa } from '../constants'\r\n\r\nconst Inicio = () => {\r\n    const [dadosAPI, setDadosAPI] = useState([])\r\n    const [carregandoDadosAPI, setCarregandoDadosAPI] = useState(false)\r\n\r\n    async function obterDadosAPI(){\r\n        setCarregandoDadosAPI(true)\r\n        let url = apiNasa\r\n        await fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            setDadosAPI(data)\r\n        })\r\n        .catch(function(error){\r\n            console.error('Erro ao obter os dados: ' + error.message)\r\n        })\r\n        setCarregandoDadosAPI(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        obterDadosAPI()\r\n        document.title = 'Início'\r\n    }, [])\r\n\r\n    return (\r\n        <Container fluid className=\"p-0\">\r\n            <Cabecalho/>\r\n\r\n            <Row>&nbsp;</Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} sm={10} md={4}>\r\n                    <h3 className=\"text-center\">Seja Bem Vindo!</h3>\r\n                    <h4 className=\"text-center\">Esta é a página inicial do app Órion.</h4>\r\n                </Col>\r\n            </Row>\r\n            <Row>&nbsp;</Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} sm={10} md={4}>\r\n                    <h3 className=\"text-center\">Imagem astronômica do dia:</h3>\r\n                </Col>\r\n            </Row>\r\n            &nbsp;\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col className=\"m-auto\">\r\n                    <h6 className=\"text-center\">{dadosAPI.title}</h6>\r\n                    <Image src={dadosAPI.url} className=\"rounded mx-auto d-block\" width=\"25%\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} sm={10} md={4}>\r\n                {Object.keys(dadosAPI)[0] == \"copyright\"\r\n                    ? <h6 className=\"text-center\">Image Credit & Copyright: {dadosAPI.copyright}</h6>\r\n                    : <h6 className=\"text-center\">No Copyrights </h6>\r\n                }\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} sm={10} md={10}>\r\n                <p>Explanation: {dadosAPI.explanation}</p>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} sm={10} md={10}>\r\n                <p>Data: {new Date(dadosAPI.date).toLocaleDateString()}</p>\r\n                </Col>\r\n            </Row>\r\n            <Rodape/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Inicio","import React, { useEffect, useState } from 'react'\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport Cabecalho from '../components/Cabecalho'\r\nimport Rodape from '../components/Rodape'\r\n\r\nimport { IoMdPlanet } from 'react-icons/io'\r\nimport { IoTelescope } from 'react-icons/io5'\r\nimport { MdModeEdit, MdDelete, MdSave } from 'react-icons/md'\r\n\r\nimport {BACKEND} from '../constants'\r\n\r\nconst Planetas = () => {\r\n    const valorInicial = {nome: '', raioKM: '', numSatelites: '', distanceSolUA: '', tipo: ''}\r\n    const [planeta, setPlaneta] = useState(valorInicial)\r\n    const [planetas, setPlanetas] = useState([])\r\n    const [carregandoPlanetas, setCarregandoPlanetas] = useState(false)\r\n    const [erros, setErros] = useState({})\r\n    const [salvandoPlanetas, setSalvandoPlanetas] = useState(false)\r\n    const [aviso, setAviso] = useState('')\r\n    const [confirmaExclusao, setConfirmaExclusao] = useState(false)\r\n\r\n    const { nome, raioKM, numSatelites, distanceSolUA, tipo } = planeta\r\n    \r\n    async function obterPlanetas(){\r\n        setCarregandoPlanetas(true)\r\n        let url = `${BACKEND}/planetas`\r\n        await fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            setPlanetas(data)\r\n        })\r\n        .catch(function(error){\r\n            console.error('Erro ao obter os planetas: ' + error.message)\r\n        })\r\n        setCarregandoPlanetas(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        obterPlanetas()\r\n        document.title = 'Cadastro de Planetas'\r\n    }, [])\r\n\r\n    const validaErrosPlaneta = () => {\r\n        const novosErros = {}\r\n\r\n        // Validação do nome\r\n        if (!nome || nome === '') novosErros.nome = 'O nome não pode ser vazio!'\r\n        else if (nome === \"Plutão\" || nome === \"plutão\") novosErros.nome = 'Plutão não é planeta!'\r\n        \r\n        // Validação do raio\r\n        if (isNaN(parseFloat(raioKM))) novosErros.raioKM = 'O raio deve ser um número!'\r\n\r\n        // Validação n° de satélites\r\n        if (isNaN(parseInt(numSatelites))) novosErros.numSatelites = 'O n° de satélites deve ser um número!'\r\n\r\n        // Validação da distância\r\n        if (isNaN(parseFloat(distanceSolUA))) novosErros.distanceSolUA = 'A distância deve ser um número!'\r\n\r\n        // Validação do tipo\r\n        if (!tipo || tipo === '') novosErros.tipo = 'Escolha um tipo!'\r\n\r\n        return novosErros\r\n    }\r\n\r\n    async function salvarPlaneta(event){\r\n        event.preventDefault() // evita que a página seja recarregada\r\n\r\n        const novosErros = validaErrosPlaneta()\r\n        if (Object.keys(novosErros).length > 0){\r\n            // Sim, temos erros!\r\n            setErros(novosErros)\r\n        } else {\r\n            setSalvandoPlanetas(true)\r\n                const metodo = planeta.hasOwnProperty('_id') ? 'PUT' : 'POST'\r\n                let url = `${BACKEND}/planetas`\r\n                await fetch (url, {\r\n                    method: metodo,\r\n                    headers: {\r\n                        Accept: 'appliction/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(planeta)\r\n                }) .then(response => response.json())\r\n                .then(data => {\r\n                    (data._id || data.message) ? setAviso('Registro salvo com sucesso!') : setAviso('')\r\n                    setPlaneta(valorInicial) // Limpar a tela com os valores iniciais\r\n                    obterPlanetas() // Atualizar a tela com os registros atualizados\r\n                }) .catch(function (error){\r\n                    console.error(`Erro ao salvar o planeta: ${error.message}`)\r\n                })\r\n                setSalvandoPlanetas(false)\r\n        }\r\n    }\r\n\r\n    async function excluirPlaneta(){\r\n        let url = `${BACKEND}/planetas/${planeta._id}`\r\n        await fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }) .then(response => response.json())\r\n        .then(data => {\r\n            data.message ? setAviso(data.message) : setAviso('')\r\n            obterPlanetas()\r\n        })\r\n        .catch(function (error) {\r\n            console.error(`Erro ao excluir o planeta: ${error.message}`)\r\n        })\r\n    }\r\n\r\n    const alteraDadosPlaneta = e => {\r\n        setPlaneta({...planeta, [e.target.name]: e.target.value})\r\n        setErros({})\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"p-0\">\r\n            <Cabecalho/>\r\n            &nbsp;\r\n            <Row className=\"p-3\">\r\n                <Col xs={12} lg={6}>\r\n                    {/* Formulário de Planetas */}\r\n                    <h4><IoMdPlanet/> Cadastro dos Planetas</h4>\r\n                    &nbsp;\r\n                    <Form method=\"post\">\r\n\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} controlId=\"nome\">\r\n                            <Form.Label>Nome do Planeta</Form.Label>\r\n                            <Form.Control name=\"nome\" placeholder=\"Ex: Júpiter\" value={nome} onChange={alteraDadosPlaneta} isInvalid={!!erros.nome}/>\r\n                                <Form.Control.Feedback type='invalid'>\r\n                                    {erros.nome}\r\n                                </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"raioKM\">\r\n                            <Form.Label>Raio do Planeta em Quilômetros</Form.Label>\r\n                            <Form.Control name=\"raioKM\" placeholder=\"Ex: 6051\" value={raioKM} onChange={alteraDadosPlaneta} isInvalid={!!erros.raioKM}/>\r\n                                <Form.Control.Feedback type='invalid'>\r\n                                    {erros.raioKM}\r\n                                </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} controlId=\"numSatelites\">\r\n                            <Form.Label>Número de Satélites do Planeta</Form.Label>\r\n                            <Form.Control name=\"numSatelites\" placeholder=\"Ex: 1\" value={numSatelites} onChange={alteraDadosPlaneta} isInvalid={!!erros.numSatelites}/>\r\n                                <Form.Control.Feedback type='invalid'>\r\n                                    {erros.numSatelites}\r\n                                </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"distanceSolUA\">\r\n                            <Form.Label>Distância do Planeta ao Sol em UA</Form.Label>\r\n                            <Form.Control name=\"distanceSolUA\" placeholder=\"Ex: 5,2\" value={distanceSolUA} onChange={alteraDadosPlaneta} isInvalid={!!erros.distanceSolUA}/>\r\n                                <Form.Control.Feedback type='invalid'>\r\n                                    {erros.distanceSolUA}\r\n                                </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"tipo\">\r\n                            <Form.Label>Tipo do Planeta</Form.Label> &nbsp;\r\n                            <Form.Check inline type=\"radio\" label=\"Rochoso\" name=\"tipo\" value=\"rochoso\" onChange={alteraDadosPlaneta} isInvalid={!!erros.tipo}/>\r\n                            <Form.Check inline type=\"radio\" label=\"Gasoso\" name=\"tipo\" value=\"gasoso\" onChange={alteraDadosPlaneta} isInvalid={!!erros.tipo}/>\r\n                        </Form.Group>\r\n                        &nbsp;\r\n                        <Button variant=\"dark\" type=\"submit\" \r\n                            title=\"Salvar o registro\" onClick={(e) => salvarPlaneta(e)}>\r\n                            {salvandoPlanetas\r\n                                ? <><Spinner animation=\"border\" variant=\"dark\" size=\"sm\"/> Aguarde...</>\r\n                                : <><MdSave/> Salvar</>\r\n                            }\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n                <Col xs={12} lg={6}>\r\n                    {/* Listagem de Planetas */}\r\n                    <h4><IoTelescope/> Listagem dos Planetas</h4>\r\n                    &nbsp;\r\n                    {carregandoPlanetas &&\r\n                    <>\r\n                    <Spinner animation=\"grow\" variant=\"dark\"/>\r\n                    <p>Aguarde enquanto os planetas são recarregados...</p>\r\n                    </>}\r\n                    <Table striped bordered>\r\n                        <thead>\r\n                            <tr className=\"bg-dark text-light\">\r\n                                <th>Nome</th>\r\n                                <th>Raio</th>\r\n                                <th>n° Satélites</th>\r\n                                <th>Distância ao Sol</th>\r\n                                <th>Tipo</th>\r\n                                <th>Inclusão</th>\r\n                                <th>Opções</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {planetas.map(item => (\r\n                                <tr key={item._id}>\r\n                                    <td>{item.nome}</td>\r\n                                    <td>{new Number(item.raioKM).toLocaleString()} km</td>\r\n                                    <td>{new Number(item.numSatelites).toLocaleString()}</td>\r\n                                    <td>{new Number(item.distanceSolUA).toLocaleString()} UA</td>\r\n                                    <td>{item.tipo}</td>\r\n                                    <td>{new Date(item.createdAt).toLocaleDateString()}</td>\r\n                                    <td>\r\n                                        <Button variant=\"dark\" title=\"Editar o registro\"\r\n                                        onClick={() => setPlaneta(item)}><MdModeEdit/></Button>\r\n                                        &nbsp;\r\n                                        <Button variant=\"dark\" title=\"Excluir o registro\"\r\n                                        onClick={() => {\r\n                                            setConfirmaExclusao(true)\r\n                                            setPlaneta(item)\r\n                                        }}><MdDelete/></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            <tr className=\"bg-light text-dark\">\r\n                                <td colSpan=\"6\">Total de Registros:</td>\r\n                                <td>{planetas.length}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n            <Toast\r\n                onClose={() => setAviso('')}\r\n                show={aviso.length > 0}\r\n                animation={false}\r\n                delay={4000}\r\n                autohide\r\n                className=\"bg-light\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 10,\r\n                    right: 10\r\n                }}>\r\n                <Toast.Header closeButton={false}>Aviso</Toast.Header>\r\n                <Toast.Body>{aviso}</Toast.Body>\r\n            </Toast>\r\n            <Modal animation={false} show={confirmaExclusao}\r\n                onHide={() => setConfirmaExclusao(false)}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Confirmação da Exclusão</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Confirma a exclusão do planeta selecionado?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"dark\" onClick={() => setConfirmaExclusao(!confirmaExclusao)}>\r\n                        ❌Cancelar\r\n                    </Button>\r\n                    <Button variant=\"dark\" onClick={() => {\r\n                            excluirPlaneta()\r\n                            setConfirmaExclusao(!confirmaExclusao)\r\n                        }}>\r\n                        ✅Confirmar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Rodape/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Planetas","import React from 'react'\r\nimport { HashRouter, Routes, Route } from 'react-router-dom'\r\n\r\nimport Inicio from '../pages/Inicio'\r\nimport Planetas from '../pages/Planetas'\r\n\r\nexport default function Rotas(){\r\n    return (\r\n        <HashRouter>\r\n            <Routes>\r\n                <Route exact path='/' element={<Inicio/>} />\r\n                <Route exact path='/planetas' element={<Planetas/>} /> \r\n            </Routes>\r\n        </HashRouter>\r\n    )\r\n}","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Rotas from './routes/Rotas'\n\nconst App = () => {\n  return (\n    <Rotas/>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}